{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","props","images","step","frameSize","itemWidth","animationDuration","useState","translate","setTranslate","translateStep","carouselWidth","maxTranslate","length","className","style","width","transform","transition","map","image","i","src","alt","toString","type","onClick","currentTranslate","disabled","current","defaultControls","isInfinite","App","controls","setControls","handleInputChange","control","value","currentControls","onChange","event","target","min","max","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c28f8983.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nconst Carousel: React.FC<Props> = (props) => {\n  const {\n    images,\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n  } = props;\n\n  const [translate, setTranslate] = useState(0);\n\n  const translateStep = step * itemWidth;\n  const carouselWidth = frameSize * itemWidth;\n  const maxTranslate = (images.length - frameSize) * itemWidth;\n\n  const handlePrevClick = () => {\n    setTranslate(currentTranslate => {\n      return currentTranslate - translateStep > 0\n        ? currentTranslate - translateStep\n        : 0;\n    });\n  };\n\n  const handleNextClick = () => {\n    setTranslate(current => {\n      return current + translateStep < maxTranslate\n        ? current + translateStep\n        : maxTranslate;\n    });\n  };\n\n  return (\n    <div className=\"Carousel\" style={{ width: `${carouselWidth}px` }}>\n      <div className=\"Carousel__frame\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(-${translate}px)`,\n            transition: `${animationDuration}ms transform`,\n          }}\n        >\n          {images.map((image, i) => (\n            <li key={image}>\n              <img\n                className=\"Carousel__img\"\n                src={image}\n                alt={(i + 1).toString()}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handlePrevClick}\n          disabled={!translate}\n        >\n          {'<'}\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handleNextClick}\n          disabled={translate === maxTranslate}\n        >\n          {'>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\n\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport type { Controls } from './types/Controls';\n\nconst defaultControls: Controls = {\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  isInfinite: false,\n};\n\nexport const App = () => {\n  const [controls, setControls] = useState<Controls>(defaultControls);\n\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const handleInputChange = (control: keyof Controls, value: number) => {\n    setControls(currentControls => ({ ...currentControls, [control]: value }));\n  };\n\n  const toggleInfiniteCheckbox = () => {\n    setControls(currentControls => ({\n      ...currentControls, isInfinite: !currentControls.isInfinite,\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <div className=\"App__controls\">\n        <label className=\"App__control\">\n          Item width:\n          <input\n            type=\"number\"\n            className=\"App__input\"\n            value={controls.itemWidth}\n            onChange={(event) => {\n              handleInputChange('itemWidth', +event.target.value);\n            }}\n            step={10}\n          />\n        </label>\n\n        <label className=\"App__control\">\n          Frame size:\n          <input\n            type=\"number\"\n            className=\"App__input\"\n            value={controls.frameSize}\n            min={1}\n            max={images.length}\n            onChange={(event) => {\n              handleInputChange('frameSize', +event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"App__control\">\n          Step:\n          <input\n            type=\"number\"\n            className=\"App__input\"\n            value={controls.step}\n            min={1}\n            max={images.length}\n            onChange={(event) => {\n              handleInputChange('step', +event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"App__control\">\n          Animation duration:\n          <input\n            type=\"number\"\n            className=\"App__input\"\n            value={controls.animationDuration}\n            min={0}\n            step={100}\n            onChange={(event) => {\n              handleInputChange('animationDuration', +event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"App__control\">\n          Infinite:\n          <input\n            type=\"checkbox\"\n            className=\"App__check\"\n            checked={controls.isInfinite}\n            onClick={toggleInfiniteCheckbox}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={controls.step}\n        frameSize={controls.frameSize}\n        itemWidth={controls.itemWidth}\n        animationDuration={controls.animationDuration}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}